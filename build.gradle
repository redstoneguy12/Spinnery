plugins {
	id 'fabric-loom' version '0.2.6-SNAPSHOT'
	id 'maven-publish'
	id "com.jfrog.bintray" version "1.8.4"
}

repositories {
}

if (file("${rootDir}/${System.getenv("CONFIG")}").exists())
	apply from: "${rootDir}/${System.getenv("CONFIG")}"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "${project.ext.mod_version}+${project.ext.version_meta}"
group = project.maven_group

bintray {
	user = System.getenv("BINTRAY_USER")
	key = System.getenv("BINTRAY_KEY")
	publications = ['SpinneryPublication']
	pkg {
		repo = 'Spinnery'
		name = project.archives_base_name
		userOrg = 'spinnery'
		licenses = ['LGPL-3.0']
		vcsUrl = 'https://github.com/vini2003/Spinnery.git'
		version {
			name = project.version
			released  = new Date()
			vcsTag = project.version
		}
	}
}

minecraft {
}

dependencies {
	// Minecraft
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	// Yarn
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	// Fabric Loader
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Jankson
	modCompile "blue.endless:jankson:1.2.0"
	include "blue.endless:jankson:1.2.0"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

publishing {
	publications {
		SpinneryPublication(MavenPublication) {
			groupId 'com.github.vini2003'
			artifactId 'spinnery'
			version project.version

			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		mavenLocal()
	}
}
